server:
  port: 8104

spring:
  application:
    name: matrixiot-service-system
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      config:
        username: nacos
        password: nacos.matrixiot-2
        contextPath: /nacos
        server-addr: matrixiot-secondary-2:8848
        group: spring
      discovery:
        username: nacos
        password: nacos.matrixiot-2
        server-addr: matrixiot-secondary-2:8848
        namespace: ${spring.profiles.active}
        group: spring

  # Jackson 配置项
  jackson:
    serialization:
      write-dates-as-timestamps: true # 设置 LocalDateTime 的格式，使用时间戳
      write-date-timestamps-as-nanoseconds: false # 设置不使用 nanoseconds 的格式。例如说 1611460870.401，而是直接 1611460870401
      write-durations-as-timestamps: true # 设置 Duration 的格式，使用时间戳
      fail-on-empty-beans: false # 允许序列化无属性的 Bean

  # Cache 配置项
  cache:
    type: REDIS
    redis:
      time-to-live: 1h # 设置过期时间为 1 小时

  # 数据源配置项
  autoconfigure:
    exclude:
      - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure # 排除 Druid 的自动配置，使用 dynamic-datasource-spring-boot-starter 配置多数据源
      - de.codecentric.boot.admin.client.config.SpringBootAdminClientAutoConfiguration # 禁用 Spring Boot Admin 的 Client 的自动配置
  datasource:
    druid: # Druid 【监控】相关的全局配置
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        allow: # 设置白名单，不填则允许所有访问
        url-pattern: /druid/*
        login-username: # 控制台管理用户名和密码
        login-password:
      filter:
        stat:
          enabled: true
          log-slow-sql: true # 慢 SQL 记录
          slow-sql-millis: 100
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
    dynamic: # 多数据源配置
      druid: # Druid 【连接池】相关的全局配置
        initial-size: 1 # 初始连接数
        min-idle: 1 # 最小连接池数量
        max-active: 20 # 最大连接池数量
        max-wait: 600000 # 配置获取连接等待超时的时间，单位：毫秒
        time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
        min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位：毫秒
        max-evictable-idle-time-millis: 900000 # 配置一个连接在池中最大生存的时间，单位：毫秒
        validation-query: SELECT 1 FROM DUAL # 配置检测连接是否有效
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
      primary: master
      datasource:
        master:
          name: matrixiot_system
          driver: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:6446/${spring.datasource.dynamic.datasource.master.name}?allowMultiQueries=true&useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true # MySQL Connector/J 8.X 连接的示例
          username: matrixiot_system
          password: matrixiot_system.123!
        slave: # 模拟从库，可根据自己需要修改
          name: matrixiot_system
          driver: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:6446/${spring.datasource.dynamic.datasource.slave.name}?allowMultiQueries=true&useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true # MySQL Connector/J 8.X 连接的示例
          username: matrixiot_system
          password: matrixiot_system.123!

  config:
    import: optional:nacos:test.yaml
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
  redis:
    password: matrixiot@redis.123
    sentinel:
      master: mymaster
      nodes:
        - 192.168.1.11:26379
        - 192.168.1.12:26379
        - 192.168.1.101:26379
      password: matrixiot@redis.123
    database: 0
    timeout: 36000
    lettuce:
      pool:
        max-active: 8
        max-wait: 100
        max-idle: 8
        min-idle: 0
      shutdown-timeout: 100

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      location: ${logging.path}/data

# MyBatis Plus 的配置项
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。
  global-config:
    db-config:
      id-type: NONE # “智能”模式，基于 IdTypeEnvironmentPostProcessor + 数据源的类型，自动适配成 AUTO、INPUT 模式。
      #      id-type: AUTO # 自增 ID，适合 MySQL 等直接自增的数据库
      #      id-type: INPUT # 用户输入 ID，适合 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库
      #      id-type: ASSIGN_ID # 分配 ID，默认使用雪花算法。注意，Oracle、PostgreSQL、Kingbase、DB2、H2 数据库时，需要去除实体类上的 @KeySequence 注解
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
    banner: false # 关闭控制台的 Banner 打印
  #  type-aliases-package: ${yudao.info.base-package}.dal.dataobject
  encryptor:
    password: XDV71a+xqStEA3WH # 加解密的秘钥，可使用 https://www.imaegoo.com/2020/aes-key-generator/ 网站生成

mybatis-plus-join:
  banner: false # 关闭控制台的 Banner 打印

# 日志文件配置
logging:
  file:
    name: /data/matrixiot/logs/${spring.application.name}.log

rocketmq:
  consumer:
    group: springboot_consumer_group
    # 一次拉取消息最大值，注意是拉取消息的最大值而非消费最大值
    pull-batch-size: 10
  name-server: matrixiot-1:9876;matrixiot-2:9876;matrixiot-secondary-1:9876
  producer:
    # 发送同一类消息的设置为同一个group，保证唯一
    group: springboot_producer_group
    # 发送消息超时时间，默认3000
    sendMessageTimeout: 10000
    # 发送消息失败重试次数，默认2
    retryTimesWhenSendFailed: 2
    # 异步消息重试此处，默认2
    retryTimesWhenSendAsyncFailed: 2
    # 消息最大长度，默认1024 * 1024 * 4(默认4M)
    maxMessageSize: 4096
    # 压缩消息阈值，默认4k(1024 * 4)
    compressMessageBodyThreshold: 4096
    # 是否在内部发送失败时重试另一个broker，默认false
    retryNextServer: false


--- #################### 验证码相关配置 ####################
aj:
  captcha:
    enable: true
    #    jigsaw: classpath:images/jigsaw # 滑动验证，底图路径，不配置将使用默认图片；以 classpath: 开头，取 resource 目录下路径
    #    pic-click: classpath:images/pic-click # 滑动验证，底图路径，不配置将使用默认图片；以 classpath: 开头，取 resource 目录下路径
    cache-type: redis # 缓存 local/redis...
    cache-number: 1000 # local 缓存的阈值,达到这个值，清除缓存
    timing-clear: 180 # local定时清除过期缓存(单位秒),设置为0代表不执行
    type: blockPuzzle # 验证码类型 default两种都实例化。 blockPuzzle 滑块拼图 clickWord 文字点选
    water-mark: isWater # 右下角水印文字(我的水印)，可使用 https://tool.chinaz.com/tools/unicode.aspx 中文转 Unicode，Linux 可能需要转 unicode
    interference-options: 0 # 滑动干扰项(0/1/2)
    req-frequency-limit-enable: false # 接口请求次数一分钟限制是否开启 true|false
    req-get-lock-limit: 5 # 验证失败5次，get接口锁定
    req-get-lock-seconds: 10 # 验证失败后，锁定时间间隔
    req-get-minute-limit: 30 # get 接口一分钟内请求数限制
    req-check-minute-limit: 60 # check 接口一分钟内请求数限制
    req-verify-minute-limit: 60 # verify 接口一分钟内请求数限制

matrixiot:
  sms-code: # 短信验证码相关的配置项
    expire-times: 10m
    send-frequency: 1s
    send-maximum-quantity-per-day: 9999
    begin-code: 9999 # 这里配置 9999 的原因是，测试方便。
    end-code: 9999 # 这里配置 9999 的原因是，测试方便。
  captcha:
    enable: true
  tenant:
    enable: true
    #    ignore-urls:
    #      - /api/v1/system/tenant/get-by-website
    #      - /api/v1/system/dict-data/list-all-simple
    ignore-tables:
      - infra_config
      - system_tenant
      - system_tenant_package
      - system_sms_template
      - system_sms_channel
      - system_sms_log
      - system_oauth2_client
      - system_dict_data
      - system_dict_type
      - system_menu
      - system_notify_template
      - system_mail_template
      - system_mail_log
      - system_mail_account
      - system_error_code

dubbo:
  application:
    name: matrixiot-service-system-dubbo
    register-mode: instance
    qos-enable: false
  registry:
    address: nacos://matrixiot-secondary-2:8848?namespace=${spring.profiles.active}
    username: nacos
    password: nacos.matrixiot-2
    group: dubbo
  config-center:
    address: nacos://matrixiot-secondary-2:8848?namespace=${spring.profiles.active}
    username: nacos
    password: nacos.matrixiot-2
  consumer:
    check: false
  protocol:
    name: dubbo
    serialization: hessian2
    port: -1
    server: netty4
  scan:
    base-packages: com.victorlamp.matrixiot.service